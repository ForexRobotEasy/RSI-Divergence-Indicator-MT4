
// RSI Divergence Indicator MT4
// Developed by Forex Robot Easy Team (forexroboteasy.com)

#property strict

// Input parameters
input int RSI_Period = 14; // RSI period
input double RSI_Overbought_Level = 70; // RSI overbought level
input double RSI_Oversold_Level = 30; // RSI oversold level

// Global variables
double rsiBuffer[]; // RSI buffer
double priceBuffer[]; // Price buffer
int prevHigh = EMPTY; // Previous high point
int prevLow = EMPTY; // Previous low point

// Initialize the indicator
int OnInit()
{
    // Binding indicators to buffers
    SetIndexBuffer(0, rsiBuffer);
    SetIndexBuffer(1, priceBuffer);
    
    // Setting indicator labels
    IndicatorSetString(INDICATOR_SHORTNAME, 'RSI Divergence Indicator MT4');
    IndicatorSetString(0, 'RSI');
    IndicatorSetString(1, 'Price');
    
    // Setting indicator levels
    SetIndexLabel(0, 'RSI');
    SetIndexLabel(1, 'Price');
    
    return(INIT_SUCCEEDED);
}

// Calculate and update indicator values
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
    int limit = rates_total - prev_calculated;
    
    // Calculate RSI values
    ArraySetAsSeries(open, true);
    ArraySetAsSeries(close, true);
    ArraySetAsSeries(high, true);
    ArraySetAsSeries(low, true);
    
    if (prev_calculated > 0)
        limit++;
        
    for (int i = 0; i < limit; i++)
    {
        rsiBuffer[i] = iRSI(NULL, 0, RSI_Period, PRICE_CLOSE, i);
        priceBuffer[i] = close[i];
    }
    
    // Check for RSI divergences
    for (int i = limit - 1; i >= 0; i--)
    {
        // RSI line crossing 50 level
        if (rsiBuffer[i] > 50 && rsiBuffer[i - 1] < 50)
        {
            SendAlert('RSI line crossed 50 level');
        }
        
        // Price returning to previous high/low
        if (prevHigh != EMPTY && close[i] == prevHigh)
        {
            SendAlert('Price returned to previous high');
        }
        
        if (prevLow != EMPTY && close[i] == prevLow)
        {
            SendAlert('Price returned to previous low');
        }
        
        // Creation of new ZigZag leg
        if (prevHigh == EMPTY && prevLow == EMPTY)
        {
            prevHigh = high[i];
            prevLow = low[i];
        }
        
        if (high[i] > prevHigh)
        {
            prevHigh = high[i];
            SendAlert('New ZigZag leg created (High)');
        }
        
        if (low[i] < prevLow)
        {
            prevLow = low[i];
            SendAlert('New ZigZag leg created (Low)');
        }
    }
    
    return(rates_total);
}

// Send alert to the trader
void SendAlert(string message)
{
    // Trigger alerts (popups, mobile notifications, or emails)
    Alert(message);
    SendNotification(message);
    SendMail('RSI Divergence Alert', message);
}
